on:
  push:
    branches:
      - main

name: Azure_Container_Deployment

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # checkout the repo
      - name: "Checkout GitHub Action"
        uses: actions/checkout@main

      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "Login to Azure Container Registry"
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

        # This assumes your GitHub secret is named ENV_FILE
      - name: Create .env file
        run: |
          echo "${{ secrets.ENV_FILE }}" > app/backend/.env

      # Build and push the backend image
      - name: "Build and push backend image"
        run: |
          docker build -f docker/Dockerfile.backend -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-challenge-backend:${{ github.sha }} .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-challenge-backend:${{ github.sha }}

      # Build and push the frontend image with PORT build argument
      - name: "Build and push frontend image"
        run: |
          docker build -f docker/Dockerfile.frontend \
            --build-arg PORT=80 \
            -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-challenge-frontend:${{ github.sha }} .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-challenge-frontend:${{ github.sha }}

      # Generate backend ACI YAML definition
      - name: "Generate backend ACI definition"
        run: |
          cat > backend-container.yaml << EOL
          apiVersion: 2019-12-01
          location: canadacentral
          name: ms-challenge-backend-aci
          properties:
            containers:
            - name: backend
              properties:
                image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-challenge-backend:${{ github.sha }}
                ports:
                - port: 5001
                environmentVariables:
                - name: FLASK_APP
                  value: run.py
                - name: FLASK_DEBUG
                  value: '0'
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 2
            osType: Linux
            ipAddress:
              type: Public
              ports:
              - port: 5001
              dnsNameLabel: ms-challenge-backend-aci
            imageRegistryCredentials:
            - server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
              username: ${{ secrets.REGISTRY_USERNAME }}
              password: ${{ secrets.REGISTRY_PASSWORD }}
          EOL

      # Generate frontend ACI YAML definition
      - name: "Generate frontend ACI definition"
        run: |
          cat > frontend-container.yaml << EOL
          apiVersion: 2019-12-01
          location: canadacentral
          name: ms-challenge-frontend-aci
          properties:
            containers:
            - name: frontend
              properties:
                image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/ms-challenge-frontend:${{ github.sha }}
                ports:
                - port: 80
                environmentVariables:
                - name: NEXT_PUBLIC_API_URL
                  value: "http://ms-challenge-backend-aci.canadacentral.azurecontainer.io:5001"
                - name: PORT
                  value: "80"
                resources:
                  requests:
                    cpu: 1
                    memoryInGB: 2
            osType: Linux
            ipAddress:
              type: Public
              ports:
              - port: 80
              dnsNameLabel: ms-challenge-frontend-aci
            imageRegistryCredentials:
            - server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
              username: ${{ secrets.REGISTRY_USERNAME }}
              password: ${{ secrets.REGISTRY_PASSWORD }}
          EOL

      # Deploy backend to Azure Container Instances
      - name: "Deploy backend to Azure Container Instances"
        run: |
          # Try to update first, create if it doesn't exist
          az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file backend-container.yaml || \
          (az container delete -y --resource-group ${{ secrets.RESOURCE_GROUP }} --name ms-challenge-backend-aci && \
          az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file backend-container.yaml)

      # Deploy frontend to Azure Container Instances
      - name: "Deploy frontend to Azure Container Instances"
        run: |
          # Try to update first, create if it doesn't exist
          az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file frontend-container.yaml || \
          (az container delete -y --resource-group ${{ secrets.RESOURCE_GROUP }} --name ms-challenge-frontend-aci && \
          az container create --resource-group ${{ secrets.RESOURCE_GROUP }} --file frontend-container.yaml)

      # Output the URLs of the deployed applications
      - name: "Show Application URLs"
        run: |
          echo "Frontend URL: http://ms-challenge-frontend-aci.canadacentral.azurecontainer.io"
          echo "Backend URL: http://ms-challenge-backend-aci.canadacentral.azurecontainer.io:5001"
